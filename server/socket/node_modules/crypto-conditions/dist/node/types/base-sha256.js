'use strict';

var _Reflect$construct = require("@babel/runtime-corejs3/core-js-stable/reflect/construct");

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js-stable/object/define-property");

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/getPrototypeOf"));

var _fulfillment = _interopRequireDefault(require("../lib/fulfillment"));

var _crypto = _interopRequireDefault(require("crypto"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var BaseSha256 = /*#__PURE__*/function (_Fulfillment) {
  (0, _inherits2.default)(BaseSha256, _Fulfillment);

  var _super = _createSuper(BaseSha256);

  function BaseSha256() {
    (0, _classCallCheck2.default)(this, BaseSha256);
    return _super.apply(this, arguments);
  }

  (0, _createClass2.default)(BaseSha256, [{
    key: "generateHash",
    value:
    /**
     * Calculate condition hash.
     *
     * This method is called internally by `getCondition`. It calculates the
     * condition hash by hashing the hash payload.
     *
     * @return {Buffer} Result from hashing the hash payload.
     */
    function generateHash() {
      var hash = _crypto.default.createHash('sha256');

      hash.update(this.getFingerprintContents());
      return hash.digest();
    }
  }]);
  return BaseSha256;
}(_fulfillment.default);

var _default = BaseSha256;
exports.default = _default;